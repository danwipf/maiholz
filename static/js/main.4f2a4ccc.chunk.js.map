{"version":3,"sources":["components/Layout.js","pages/SettingsPage.js","pages/DashboardPage.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","_ref","children","menuOpen","setMenuOpen","useState","React","createElement","Fragment","className","onClick","Link","to","SettingsPage","username","setUsername","localStorage","getItem","password","setPassword","navigate","useNavigate","console","log","onSubmit","e","preventDefault","setItem","dynDNS","type","placeholder","value","onChange","target","required","DashboardPage","async","response","fetch","method","headers","body","URLSearchParams","id","auth_key","channel","turn","data","json","isok","alert","error","JSON","stringify","message","App","isLoggedIn","BrowserRouter","Routes","Route","path","element","Navigate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4f2a4ccc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Layout.css';\r\n\r\nfunction Layout({ children }) {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <h1 className=\"logo\">Sauna</h1>\r\n        <div className=\"menu-toggle\" onClick={() => setMenuOpen(!menuOpen)}>\r\n          â˜°\r\n        </div>\r\n        <nav className={`nav ${menuOpen ? 'open' : ''}`}>\r\n          <Link to=\"/\" onClick={() => setMenuOpen(false)}>Setting</Link>\r\n          <Link to=\"/dashboard\" onClick={() => setMenuOpen(false)}>Dashboard</Link>\r\n        </nav>\r\n      </header>\r\n      <main className=\"main-content\">\r\n        {children}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../index.css';\r\n\r\n\r\n\r\nfunction SettingsPage() {\r\n  const [username, setUsername] = useState(localStorage.getItem('username') || '');\r\n  const [password, setPassword] = useState(localStorage.getItem('password') || '');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem('username', username);\r\n    localStorage.setItem('password', password);\r\n    const dynDNS = `${username}.duckdns.org`;\r\n    localStorage.setItem('dyndns', dynDNS);\r\n    navigate('/dashboard');\r\n  };\r\n  console.log(\"Settings-Seite geladen\");\r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <form className=\"settings-box\" onSubmit={handleLogin}>\r\n        <h1>Setting</h1>\r\n        <h2>Benutzername</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Benutzername\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <h2>Passwort</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Passwort\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsPage;\r\n","// src/pages/DashboardPage.js\r\nimport React from 'react';\r\n\r\nfunction DashboardPage() {\r\n  const deviceId = 'd8bfc01a555e';\r\n  const authKey = 'MzBiZWMxdWlkEA3653E14E3D0F9437FCE4D1BE89ADE4AD54B471A45EEB2FC339E44F8AD287E34BBA7348F8B25009';\r\n  const baseUrl = 'https://shelly-171-eu.shelly.cloud';\r\n\r\n  const toggleSauna = async () => {\r\n    try {\r\n      const response = await fetch(`${baseUrl}/device/relay/control`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: new URLSearchParams({\r\n          id: deviceId,\r\n          auth_key: authKey,\r\n          channel: 0,\r\n          turn: 'toggle'\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.isok) {\r\n        alert('Sauna geschaltet!');\r\n      } else {\r\n        alert('Fehler beim Schalten: ' + (data?.error || JSON.stringify(data)));\r\n      }\r\n    } catch (error) {\r\n      alert('Netzwerkfehler: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-container\">\r\n      <div className=\"setting-box\">\r\n        <h2>Dashboard</h2>\r\n        <button onClick={toggleSauna}>Sauna ein-/ausschalten</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Layout from './components/Layout';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport DashboardPage from './pages/DashboardPage';\r\n\r\nfunction App() {\r\n\r\n  const isLoggedIn =\r\n    localStorage.getItem('username') && localStorage.getItem('password');\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Routes>\r\n          <Route path=\"/\" element={<SettingsPage />} />\r\n          <Route path=\"/dashboard\" element={isLoggedIn ? <DashboardPage /> : <Navigate to=\"/settings\" />} />\r\n        </Routes>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// src/index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Layout.js","pages/SettingsPage.js","pages/DashboardPage.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","_ref","children","menuOpen","setMenuOpen","useState","React","createElement","Fragment","className","onClick","Link","to","SettingsPage","deviceIDSauna","setdeviceIDSauna","localStorage","getItem","token","setToken","baseUrl","setBaseURL","navigate","useNavigate","onSubmit","e","preventDefault","setItem","type","placeholder","value","onChange","target","required","DashboardPage","async","fetch","method","headers","body","URLSearchParams","id","auth_key","channel","turn","error","alert","message","App","isLoggedIn","BrowserRouter","Routes","Route","path","element","Navigate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3771810a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Layout.css';\r\n\r\nfunction Layout({ children }) {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <h1 className=\"logo\">Sauna</h1>\r\n        <div className=\"menu-toggle\" onClick={() => setMenuOpen(!menuOpen)}>\r\n          ☰\r\n        </div>\r\n        <nav className={`nav ${menuOpen ? 'open' : ''}`}>\r\n          <Link to=\"/\" onClick={() => setMenuOpen(false)}>Setting</Link>\r\n          <Link to=\"/dashboard\" onClick={() => setMenuOpen(false)}>Dashboard</Link>\r\n        </nav>\r\n      </header>\r\n      <main className=\"main-content\">\r\n        {children}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../index.css';\r\n\r\n\r\n\r\nfunction SettingsPage() {\r\n  const [deviceIDSauna, setdeviceIDSauna] = useState(localStorage.getItem('deviceIDSauna') || '');\r\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n  const [baseUrl, setBaseURL] = useState(localStorage.getItem('baseURL') || '');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem('deviceIDSauna', 'd8bfc01a555e');\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('baseURL', baseUrl);\r\n    setdeviceIDSauna('d8bfc01a555e'); // ← Update anzeigen\r\n    navigate('/dashboard');\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <form className=\"settings-box\" onSubmit={handleLogin}>\r\n        <h1>Setting</h1>\r\n        <h2>DeviceIDs:</h2>\r\n        <h2>{deviceIDSauna}</h2>\r\n        \r\n        <h2>Token</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Token\"\r\n          value={token}\r\n          onChange={(e) => setToken(e.target.value)}\r\n          required\r\n        />\r\n        <h2>BaseURL</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"BaseURL\"\r\n          value={baseUrl}\r\n          onChange={(e) => setBaseURL(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Speichern</button>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsPage;\r\n","// src/pages/DashboardPage.js\r\nimport React from 'react';\r\n\r\nfunction DashboardPage() {\r\n  const deviceId = 'd8bfc01a555e';\r\n  const authKey = 'MzBiZWMxdWlkEA3653E14E3D0F9437FCE4D1BE89ADE4AD54B471A45EEB2FC339E44F8AD287E34BBA7348F8B25009';\r\n  const baseUrl = 'https://shelly-171-eu.shelly.cloud';\r\n\r\n  const toggleSauna = async () => {\r\n    try {\r\n      await fetch(`${baseUrl}/device/relay/control`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: new URLSearchParams({\r\n          id: deviceId,\r\n          auth_key: authKey,\r\n          channel: 0,\r\n          turn: 'toggle'\r\n        })\r\n      });\r\n\r\n    } catch (error) {\r\n      alert('Netzwerkfehler: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings-container\">\r\n      <div className=\"settings-box\">\r\n        <h2>Dashboard</h2>\r\n        <button onClick={toggleSauna}>Sauna ein-/ausschalten</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Layout from './components/Layout';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport DashboardPage from './pages/DashboardPage';\r\n\r\nfunction App() {\r\n\r\n  const isLoggedIn =\r\n    localStorage.getItem('username') && localStorage.getItem('password');\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Routes>\r\n          <Route path=\"/\" element={<SettingsPage />} />\r\n          <Route path=\"/dashboard\" element={isLoggedIn ? <DashboardPage /> : <Navigate to=\"/settings\" />} />\r\n        </Routes>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// src/index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}